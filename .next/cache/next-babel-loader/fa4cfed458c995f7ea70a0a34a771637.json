{"ast":null,"code":"var _jsxFileName = \"/Users/callumstrachan/Desktop/Repos/joseph-atkinson/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// pages/_app.js\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\nimport configureStore from '../store/combineReducers.js';\n/**\n* @param {object} initialState\n* @param {boolean} options.isServer indicates whether it is a server side or client side\n* @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n* @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n* @param {boolean} options.debug User-defined debug mode param\n* @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR \n*/\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default withRedux(configureStore)(MyApp);","map":{"version":3,"sources":["/Users/callumstrachan/Desktop/Repos/joseph-atkinson/pages/_app.js"],"names":["React","Provider","App","withRedux","configureStore","MyApp","render","Component","pageProps","store","props"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AAEA;;;;;;;;;AASA,MAAMC,KAAN,SAAoBH,GAApB,CAAwB;AAEpBI,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA,SAAZ;AAAuBC,MAAAA;AAAvB,QAAgC,KAAKC,KAA3C;AACA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADJ;AAKH;;AATmB;;AAaxB,eAAeL,SAAS,CAACC,cAAD,CAAT,CAA0BC,KAA1B,CAAf","sourcesContent":["// pages/_app.js\nimport React from \"react\";\nimport {Provider} from \"react-redux\";\nimport App from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\nimport configureStore from '../store/combineReducers.js';\n\n/**\n* @param {object} initialState\n* @param {boolean} options.isServer indicates whether it is a server side or client side\n* @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n* @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n* @param {boolean} options.debug User-defined debug mode param\n* @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR \n*/\n\nclass MyApp extends App {\n\n    render() {\n        const {Component, pageProps, store} = this.props;\n        return (\n            <Provider store={store}>\n                <Component {...pageProps} />\n            </Provider>\n        );\n    }\n\n}\n\nexport default withRedux(configureStore)(MyApp);"]},"metadata":{},"sourceType":"module"}